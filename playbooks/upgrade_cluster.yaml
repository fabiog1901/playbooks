---
- name: UPGRADE COCKROACHDB
  hosts: cockroachdb
  gather_facts: yes
  become: yes
  vars:
    cockroachdb_version: v23.2.17
    iknowwhatiamdoing: no
    cockroachdb_autofinalize: yes
    cockroachdb_advertise_addr: "{{ public_ip }}"
    cockroachdb_repo_url: https://binaries.cockroachdb.com
  tasks:
    - name: get current cockroachdb version
      shell: |
        cockroach version | head -n1 | awk '{print $3}'
      register: out

    - name: preserve downgrade
      run_once: yes
      shell: |
        cockroach sql \
          --certs-dir=/var/lib/cockroach/certs \
          --host={{ cockroachdb_advertise_addr }} \
          -e "SET CLUSTER SETTING cluster.preserve_downgrade_option = '{{ out.stdout[1:5] }}';"
      when: not cockroachdb_autofinalize

    - name: Create the binary-type map
      set_fact:
        # map the machine CPU type to the matching filename component
        bin_arch:
          aarch64: arm64
          x86_64: amd64

    - name: Check that the CockroachDB tarball exists locally
      stat:
        path: cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}.tgz
      register: out

    - name: Download CockroachDB binary
      shell: |
        wget -q {{ cockroachdb_repo_url }}/cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}.tgz
      when: cockroachdb_version != "master" and cockroachdb_version != "custom" and not out.stat.exists

    - name: Install CockroachDB binary
      shell: |
        tar xvf cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}.tgz
        mv cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}/cockroach /usr/local/bin/cockroach
        chmod 755 /usr/local/bin/cockroach
        mkdir /usr/local/lib/cockroach/
        mv cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}/lib/libgeos*.so /usr/local/lib/cockroach/
        rm -rf cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}

    - name: install MASTER binary
      when: cockroachdb_version == "master"
      shell: |
        wget https://edge-binaries.cockroachdb.com/cockroach/cockroach.linux-gnu-{{ bin_arch[ansible_architecture] }}.LATEST
        chmod +x cockroach.linux-gnu-{{ bin_arch[ansible_architecture] }}.LATEST
        mv cockroach.linux-gnu-{{ bin_arch[ansible_architecture] }}.LATEST /usr/local/bin/cockroach
        rm -rf cockroach-*

    - name: install custom binary
      when: cockroachdb_version == "custom"
      shell: |
        wget {{ cockroachdb_custom_url }}
        tar xvf *gz 
        mv cockroach*/cockroach /usr/local/bin/cockroach
        rm -rf cockroach-*

- name: RESTART COCKROACHDB
  hosts: cockroachdb
  gather_facts: no
  serial: 1
  become: yes
  vars:
    cockroachdb_upgrade_delay: 30
  tasks:
    - name: execute lscpu to find numa nodes count
      shell: |
        lscpu | grep "NUMA node(s):" | cut -d":" -f2 | tr -d '[:space:]'
      register: out

    - name: Set fact ansible_numa_nodes
      set_fact:
        ansible_numa_nodes: "{{ out.stdout }}"

    - name: Ensure cockroachdb service is restarted
      shell: |
        systemctl daemon-reload
        systemctl enable cockroachdb
        systemctl restart cockroachdb

        sleep {{ cockroachdb_upgrade_delay }}
      when: ansible_numa_nodes|int <= 1

    - name: Ensure cockroachdb services are restarted for NUMA nodes
      when: ansible_numa_nodes|int > 1
      shell: |
        systemctl daemon-reload
        systemctl enable cockroachdb-{{ numa_idx|string }}
        systemctl restart cockroachdb-{{ numa_idx|string }}

        sleep {{ cockroachdb_upgrade_delay }}
      loop: "{{ range(ansible_numa_nodes|int) }}"
      loop_control:
        index_var: numa_idx
